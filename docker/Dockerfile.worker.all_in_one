# Copyright 2019 ByteDance Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# =============================================================================

FROM nvidia/cuda:10.0-devel-ubuntu16.04

ARG REGION

RUN rm -f /tmp/pip.conf &&\
    echo -e '[global]\nindex-url = https://pypi.douban.com/simple' >> /tmp/pip.conf

RUN if [ "x$REGION" = "xchina" ]; then mkdir -p ~/.pip && mv /tmp/pip.conf ~/.pip/; fi

ENV USE_CUDA_PATH /usr/local/cuda:/usr/local/cudnn/lib64
ENV PATH /usr/local/cuda/bin:/usr/local/nvidia/bin:${PATH}
ENV LD_LIBRARY_PATH /usr/local/cudnn/lib64:/usr/local/cuda/lib64:/usr/local/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/nccl/lib:$LD_LIBRARY_PATH
ENV LIBRARY_PATH /usr/local/cudnn/lib64:/usr/local/cuda/lib64:$LIBRARY_PATH
ENV PIP_SOURCE_PROXY https://mirrors.aliyun.com/pypi/simple/

ENV BYTEPS_BASE_PATH /usr/local
ENV BYTEPS_PATH $BYTEPS_BASE_PATH/byteps
ENV BYTEPS_GIT_LINK https://github.com/bytedance/byteps

RUN apt-get update && apt-get install -y --allow-downgrades --allow-change-held-packages --no-install-recommends \
        build-essential \
        ca-certificates \
        git \
        curl \
        wget \
        vim \
        libopenblas-dev \
        liblapack-dev \
        libopencv-dev \
        python \
        python-dev \
        python-setuptools \
        libjemalloc-dev \
        graphviz \
        cmake \
        libjpeg-dev \
        libpng-dev \
        iftop \
        lsb-release

RUN apt-get update &&\
    apt-get -y install python-pip &&\
    pip install --upgrade pip

RUN pip --no-cache-dir install \
        matplotlib \
        numpy==1.15.2 \
        scipy \
        sklearn \
        pandas \
        graphviz==0.9.0 \
        mxboard \
        tensorboard==1.0.0a6

WORKDIR /root/

RUN echo "/usr/local/cuda/lib64" >> /etc/ld.so.conf.d/cuda.conf && \
    echo "/usr/local/cudnn/lib64" >> /etc/ld.so.conf.d/cuda.conf && \
    echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf && \
    ldconfig

RUN ln -sf /usr/local/cudnn/include/cudnn.h /usr/local/cuda/include/ && \
    ln -sf /usr/local/cudnn/lib64/libcudnn* /usr/local/cuda/lib64 &&\
    ln -sf /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/libcuda.so && \
    ln -sf /usr/local/cuda/lib64/libcuda.so /usr/local/cuda/lib64/libcuda.so.1


################################ install your framework ################################
# We install three frameworks in this example, but you can remove two of them

# install mxnet
ENV MXNET_VERSION 1.4.1
RUN pip --no-cache-dir install -i $PIP_SOURCE_PROXY mxnet-cu100==$MXNET_VERSION

# install pytorch
ENV TORCH_VERSION 1.0.1
RUN pip --no-cache-dir install -i $PIP_SOURCE_PROXY \
        future \
        numpy \
        pyyaml \
        setuptools \
        six \
        typing \
        protobuf \
        torchvision==0.2.2 \
        torch==$TORCH_VERSION

# install tensorflow
ENV TENSORFLOW_VERSION 1.4.1
RUN pip --no-cache-dir install -i $PIP_SOURCE_PROXY tensorflow-gpu==$TENSORFLOW_VERSION && \
    rm -rf /tmp/pip && \
    rm -rf /root/.cache



################################ install BytePS ################################
RUN cd $BYTEPS_BASE_PATH &&\
    git clone --recurse-submodules $BYTEPS_GIT_LINK

# Remember to set BYTEPS_WITHOUT_PYTORCH=1 or BYTEPS_WITHOUT_TENSORFLOW=1 when you don't have them,
# But you don't need to set BYTEPS_WITHOUT_MXNET even if your framework isn't MXNet
RUN cd $BYTEPS_PATH &&\
    LD_PRELOAD=/usr/lib/libtcmalloc_minimal.so.4 python setup.py install

RUN rm -rf /usr/local/cuda/lib64/libcuda.so && \
    rm -rf /usr/local/cuda/lib64/libcuda.so.1

